use crate::types::EFI_STATUS;
pub const EFI_SUCCESS: EFI_STATUS = 0;
pub const EFI_LOAD_ERROR: EFI_STATUS = 1; // The image failed to load.
pub const EFI_INVALID_PARAMETER: EFI_STATUS = 2; // A parameter was incorrect.
pub const EFI_UNSUPPORTED: EFI_STATUS = 3; // The operation is not supported.
pub const EFI_BAD_BUFFER_SIZE: EFI_STATUS = 4; // The buffer was not the proper size for the request.
pub const EFI_BUFFER_TOO_SMALL: EFI_STATUS = 5; // The buffer is not large enough to hold the requested data. The required buffer size is returned in the appropriate parameter when this error occurs.
pub const EFI_NOT_READY: EFI_STATUS = 6; // There is no data pending upon return.
pub const EFI_DEVICE_ERROR: EFI_STATUS = 7; // The physical device reported an error while attempting the operation.
pub const EFI_WRITE_PROTECTED: EFI_STATUS = 8; // The device cannot be written to.
pub const EFI_OUT_OF_RESOURCES: EFI_STATUS = 9; // A resource has run out.
pub const EFI_VOLUME_CORRUPTED: EFI_STATUS = 10; // An inconstancy was detected on the file system causing the operating to fail.
pub const EFI_VOLUME_FULL: EFI_STATUS = 11; // There is no more space on the file system.
pub const EFI_NO_MEDIA: EFI_STATUS = 12; // The device does not contain any medium to perform the operation.
pub const EFI_MEDIA_CHANGED: EFI_STATUS = 13; // The medium in the device has changed since the last access.
pub const EFI_NOT_FOUND: EFI_STATUS = 14; // The item was not found.
pub const EFI_ACCESS_DENIED: EFI_STATUS = 15; // Access was denied.
pub const EFI_NO_RESPONSE: EFI_STATUS = 16; // The server was not found or did not respond to the request.
pub const EFI_NO_MAPPING: EFI_STATUS = 17; // A mapping to a device does not exist.
pub const EFI_TIMEOUT: EFI_STATUS = 18; // The timeout time expired.
pub const EFI_NOT_STARTED: EFI_STATUS = 19; // The protocol has not been started.
pub const EFI_ALREADY_STARTED: EFI_STATUS = 20; // The protocol has already been started.
pub const EFI_ABORTED: EFI_STATUS = 21; // The operation was aborted.
pub const EFI_ICMP_ERROR: EFI_STATUS = 22; // An ICMP error occurred during the network operation.
pub const EFI_TFTP_ERROR: EFI_STATUS = 23; // A TFTP error occurred during the network operation.
pub const EFI_PROTOCOL_ERROR: EFI_STATUS = 24; // A protocol error occurred during the network operation.
pub const EFI_INCOMPATIBLE_VERSION: EFI_STATUS = 25; // The function encountered an internal version that was incompatible with a version requested by the caller.
pub const EFI_SECURITY_VIOLATION: EFI_STATUS = 26; // The function was not performed due to a security violation.
pub const EFI_CRC_ERROR: EFI_STATUS = 27; // A CRC error was detected.
pub const EFI_END_OF_MEDIA: EFI_STATUS = 28; // Beginning or end of media was reached
pub const EFI_END_OF_FILE: EFI_STATUS = 31; // The end of the file was reached.
pub const EFI_INVALID_LANGUAGE: EFI_STATUS = 32; // The language specified was invalid.
pub const EFI_COMPROMISED_DATA: EFI_STATUS = 33; // The security status of the data is unknown or compromised and the data must be updated or replaced to restore a valid security status.
pub const EFI_IP_ADDRESS_CONFLICT: EFI_STATUS = 34; // There is an address conflict address allocation
pub const EFI_HTTP_ERROR: EFI_STATUS = 35; // A HTTP error occurred during the network operation.
pub const EFI_WARN_UNKNOWN_GLYPH: EFI_STATUS = 1; // The string contained one or more characters that the device could not render and were skipped.
pub const EFI_WARN_DELETE_FAILURE: EFI_STATUS = 2; // The handle was closed, but the file was not deleted.
pub const EFI_WARN_WRITE_FAILURE: EFI_STATUS = 3; // The handle was closed, but the data to the file was not flushed properly.
pub const EFI_WARN_BUFFER_TOO_SMALL: EFI_STATUS = 4; // The resulting buffer was too small, and the data was truncated to the buffer size.
pub const EFI_WARN_STALE_DATA: EFI_STATUS = 5; // The data has not been updated within the timeframe set by local policy for this type of data.
pub const EFI_WARN_FILE_SYSTEM: EFI_STATUS = 6; // The resulting buffer contains UEFI-compliant file system.
pub const EFI_WARN_RESET_REQUIRED: EFI_STATUS = 7; // The operation will be processed across a system reset.
